//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32139144
// Unknown Toolkit Version
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_75, texmode_independent
.address_size 64

	// .globl	histogram256
// histogram256_$_l_Hist has been demoted
// mergeHistogram256_$_l_Data has been demoted

.entry histogram256(
	.param .u64 .ptr .global .align 4 histogram256_param_0,
	.param .u64 .ptr .global .align 4 histogram256_param_1,
	.param .u32 histogram256_param_2
)
.reqntid 192, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<67>;
	.reg .b64 	%rd<76>;
	// demoted variable
	.shared .align 4 .b8 histogram256_$_l_Hist[6144];

	ld.param.u64 	%rd32, [histogram256_param_0];
	ld.param.u64 	%rd33, [histogram256_param_1];
	ld.param.u32 	%r9, [histogram256_param_2];
	mov.u32 	%r66, %tid.x;
	mul.wide.s32 	%rd34, %r66, 4;
	mov.u64 	%rd35, histogram256_$_l_Hist;
	add.s64 	%rd36, %rd35, %rd34;
	mov.u32 	%r10, 0;
	st.shared.u32 	[%rd36], %r10;
	st.shared.u32 	[%rd36+768], %r10;
	st.shared.u32 	[%rd36+1536], %r10;
	st.shared.u32 	[%rd36+2304], %r10;
	st.shared.u32 	[%rd36+3072], %r10;
	st.shared.u32 	[%rd36+3840], %r10;
	st.shared.u32 	[%rd36+4608], %r10;
	st.shared.u32 	[%rd36+5376], %r10;
	mul.wide.s32 	%rd37, %r66, 8;
	and.b64  	%rd1, %rd37, -256;
	shl.b32 	%r2, %r66, 27;
	bar.sync 	0;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.b32 	%r11, %envreg3;
	add.s32 	%r12, %r66, %r11;
	mad.lo.s32 	%r5, %r4, %r3, %r12;
	setp.ge.u32 	%p1, %r5, %r9;
	@%p1 bra 	$L__BB0_11;

	cvt.s64.s32 	%rd68, %r5;
	mov.b32 	%r13, %envreg6;
	mul.lo.s32 	%r14, %r13, %r4;
	cvt.s64.s32 	%rd3, %r14;

$L__BB0_2:
	and.b64  	%rd5, %rd68, 4294967295;
	shl.b64 	%rd38, %rd68, 2;
	and.b64  	%rd39, %rd38, 17179869180;
	add.s64 	%rd40, %rd33, %rd39;
	ld.global.u32 	%r6, [%rd40];
	and.b32  	%r15, %r6, 255;
	cvt.u64.u32 	%rd41, %r15;
	add.s64 	%rd42, %rd1, %rd41;
	shl.b64 	%rd43, %rd42, 2;
	add.s64 	%rd6, %rd35, %rd43;

$L__BB0_3:
	ld.volatile.shared.u32 	%r16, [%rd6];
	and.b32  	%r17, %r16, 134217727;
	add.s32 	%r18, %r17, 1;
	or.b32  	%r19, %r18, %r2;
	st.volatile.shared.u32 	[%rd6], %r19;
	ld.volatile.shared.u32 	%r20, [%rd6];
	setp.ne.s32 	%p2, %r20, %r19;
	@%p2 bra 	$L__BB0_3;

	shr.u32 	%r21, %r6, 8;
	and.b32  	%r22, %r21, 255;
	cvt.u64.u32 	%rd45, %r22;
	add.s64 	%rd46, %rd1, %rd45;
	shl.b64 	%rd47, %rd46, 2;
	add.s64 	%rd7, %rd35, %rd47;

$L__BB0_5:
	ld.volatile.shared.u32 	%r23, [%rd7];
	and.b32  	%r24, %r23, 134217727;
	add.s32 	%r25, %r24, 1;
	or.b32  	%r26, %r25, %r2;
	st.volatile.shared.u32 	[%rd7], %r26;
	ld.volatile.shared.u32 	%r27, [%rd7];
	setp.ne.s32 	%p3, %r27, %r26;
	@%p3 bra 	$L__BB0_5;

	shr.u32 	%r28, %r6, 16;
	and.b32  	%r29, %r28, 255;
	cvt.u64.u32 	%rd49, %r29;
	add.s64 	%rd50, %rd1, %rd49;
	shl.b64 	%rd51, %rd50, 2;
	add.s64 	%rd8, %rd35, %rd51;

$L__BB0_7:
	ld.volatile.shared.u32 	%r30, [%rd8];
	and.b32  	%r31, %r30, 134217727;
	add.s32 	%r32, %r31, 1;
	or.b32  	%r33, %r32, %r2;
	st.volatile.shared.u32 	[%rd8], %r33;
	ld.volatile.shared.u32 	%r34, [%rd8];
	setp.ne.s32 	%p4, %r34, %r33;
	@%p4 bra 	$L__BB0_7;

	shr.u32 	%r35, %r6, 24;
	cvt.u64.u32 	%rd53, %r35;
	add.s64 	%rd54, %rd1, %rd53;
	shl.b64 	%rd55, %rd54, 2;
	add.s64 	%rd9, %rd35, %rd55;

$L__BB0_9:
	ld.volatile.shared.u32 	%r36, [%rd9];
	and.b32  	%r37, %r36, 134217727;
	add.s32 	%r38, %r37, 1;
	or.b32  	%r39, %r38, %r2;
	st.volatile.shared.u32 	[%rd9], %r39;
	ld.volatile.shared.u32 	%r40, [%rd9];
	setp.ne.s32 	%p5, %r40, %r39;
	@%p5 bra 	$L__BB0_9;

	add.s64 	%rd68, %rd5, %rd3;
	cvt.u32.u64 	%r41, %rd68;
	setp.lt.u32 	%p6, %r41, %r9;
	@%p6 bra 	$L__BB0_2;

$L__BB0_11:
	bar.sync 	0;
	setp.gt.u32 	%p7, %r66, 255;
	@%p7 bra 	$L__BB0_14;

	mov.b32 	%r42, %envreg0;
	add.s32 	%r43, %r42, %r3;
	mul.wide.s32 	%rd57, %r43, 256;
	add.s32 	%r44, %r66, 1280;
	mul.wide.u32 	%rd58, %r44, 4;
	add.s64 	%rd75, %rd35, %rd58;
	add.s32 	%r45, %r66, 1024;
	mul.wide.u32 	%rd60, %r45, 4;
	add.s64 	%rd74, %rd35, %rd60;
	add.s32 	%r46, %r66, 768;
	mul.wide.u32 	%rd61, %r46, 4;
	add.s64 	%rd73, %rd35, %rd61;
	add.s32 	%r47, %r66, 512;
	mul.wide.u32 	%rd62, %r47, 4;
	add.s64 	%rd72, %rd35, %rd62;
	add.s32 	%r48, %r66, 256;
	mul.wide.u32 	%rd63, %r48, 4;
	add.s64 	%rd71, %rd35, %rd63;
	cvt.u64.u32 	%rd64, %r66;
	add.s64 	%rd65, %rd57, %rd64;
	shl.b64 	%rd66, %rd65, 2;
	add.s64 	%rd70, %rd32, %rd66;
	mul.wide.u32 	%rd67, %r66, 4;
	add.s64 	%rd69, %rd35, %rd67;

$L__BB0_13:
	ld.shared.u32 	%r49, [%rd69];
	and.b32  	%r50, %r49, 134217727;
	ld.shared.u32 	%r51, [%rd71];
	and.b32  	%r52, %r51, 134217727;
	add.s32 	%r53, %r52, %r50;
	ld.shared.u32 	%r54, [%rd72];
	and.b32  	%r55, %r54, 134217727;
	add.s32 	%r56, %r55, %r53;
	ld.shared.u32 	%r57, [%rd73];
	and.b32  	%r58, %r57, 134217727;
	add.s32 	%r59, %r58, %r56;
	ld.shared.u32 	%r60, [%rd74];
	and.b32  	%r61, %r60, 134217727;
	add.s32 	%r62, %r61, %r59;
	ld.shared.u32 	%r63, [%rd75];
	and.b32  	%r64, %r63, 134217727;
	add.s32 	%r65, %r64, %r62;
	st.global.u32 	[%rd70], %r65;
	add.s64 	%rd75, %rd75, 768;
	add.s64 	%rd74, %rd74, 768;
	add.s64 	%rd73, %rd73, 768;
	add.s64 	%rd72, %rd72, 768;
	add.s64 	%rd71, %rd71, 768;
	add.s64 	%rd70, %rd70, 768;
	add.s64 	%rd69, %rd69, 768;
	add.s32 	%r66, %r66, 192;
	setp.lt.u32 	%p8, %r66, 256;
	@%p8 bra 	$L__BB0_13;

$L__BB0_14:
	ret;

}
	// .globl	mergeHistogram256
.entry mergeHistogram256(
	.param .u64 .ptr .global .align 4 mergeHistogram256_param_0,
	.param .u64 .ptr .global .align 4 mergeHistogram256_param_1,
	.param .u32 mergeHistogram256_param_2
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<13>;
	// demoted variable
	.shared .align 4 .b8 mergeHistogram256_$_l_Data[1024];

	ld.param.u64 	%rd3, [mergeHistogram256_param_0];
	ld.param.u64 	%rd4, [mergeHistogram256_param_1];
	ld.param.u32 	%r10, [mergeHistogram256_param_2];
	mov.u32 	%r1, %tid.x;
	setp.ge.u32 	%p1, %r1, %r10;
	mov.u32 	%r48, 0;
	@%p1 bra 	$L__BB1_3;

	mov.b32 	%r13, %envreg0;
	mov.u32 	%r14, %ctaid.x;
	add.s32 	%r15, %r13, %r14;
	cvt.s64.s32 	%rd1, %r15;
	shl.b32 	%r45, %r1, 8;
	mov.u32 	%r46, %r1;

$L__BB1_2:
	cvt.u64.u32 	%rd5, %r45;
	add.s64 	%rd6, %rd5, %rd1;
	shl.b64 	%rd7, %rd6, 2;
	add.s64 	%rd8, %rd4, %rd7;
	ld.global.u32 	%r16, [%rd8];
	add.s32 	%r48, %r16, %r48;
	add.s32 	%r45, %r45, 65536;
	add.s32 	%r46, %r46, 256;
	setp.lt.u32 	%p2, %r46, %r10;
	@%p2 bra 	$L__BB1_2;

$L__BB1_3:
	mul.wide.s32 	%rd9, %r1, 4;
	mov.u64 	%rd10, mergeHistogram256_$_l_Data;
	add.s64 	%rd2, %rd10, %rd9;
	st.shared.u32 	[%rd2], %r48;
	bar.sync 	0;
	setp.gt.u32 	%p3, %r1, 127;
	@%p3 bra 	$L__BB1_5;

	ld.shared.u32 	%r17, [%rd2];
	ld.shared.u32 	%r18, [%rd2+512];
	add.s32 	%r19, %r17, %r18;
	st.shared.u32 	[%rd2], %r19;

$L__BB1_5:
	bar.sync 	0;
	setp.gt.u32 	%p4, %r1, 63;
	@%p4 bra 	$L__BB1_7;

	ld.shared.u32 	%r20, [%rd2];
	ld.shared.u32 	%r21, [%rd2+256];
	add.s32 	%r22, %r20, %r21;
	st.shared.u32 	[%rd2], %r22;

$L__BB1_7:
	bar.sync 	0;
	setp.gt.u32 	%p5, %r1, 31;
	@%p5 bra 	$L__BB1_9;

	ld.shared.u32 	%r23, [%rd2];
	ld.shared.u32 	%r24, [%rd2+128];
	add.s32 	%r25, %r23, %r24;
	st.shared.u32 	[%rd2], %r25;

$L__BB1_9:
	bar.sync 	0;
	setp.gt.u32 	%p6, %r1, 15;
	@%p6 bra 	$L__BB1_11;

	ld.shared.u32 	%r26, [%rd2];
	ld.shared.u32 	%r27, [%rd2+64];
	add.s32 	%r28, %r26, %r27;
	st.shared.u32 	[%rd2], %r28;

$L__BB1_11:
	bar.sync 	0;
	setp.gt.u32 	%p7, %r1, 7;
	@%p7 bra 	$L__BB1_13;

	ld.shared.u32 	%r29, [%rd2];
	ld.shared.u32 	%r30, [%rd2+32];
	add.s32 	%r31, %r29, %r30;
	st.shared.u32 	[%rd2], %r31;

$L__BB1_13:
	bar.sync 	0;
	setp.gt.u32 	%p8, %r1, 3;
	@%p8 bra 	$L__BB1_15;

	ld.shared.u32 	%r32, [%rd2];
	ld.shared.u32 	%r33, [%rd2+16];
	add.s32 	%r34, %r32, %r33;
	st.shared.u32 	[%rd2], %r34;

$L__BB1_15:
	bar.sync 	0;
	setp.gt.u32 	%p9, %r1, 1;
	@%p9 bra 	$L__BB1_17;

	ld.shared.u32 	%r35, [%rd2];
	ld.shared.u32 	%r36, [%rd2+8];
	add.s32 	%r37, %r35, %r36;
	st.shared.u32 	[%rd2], %r37;

$L__BB1_17:
	bar.sync 	0;
	setp.ne.s32 	%p10, %r1, 0;
	@%p10 bra 	$L__BB1_19;

	ld.shared.u32 	%r38, [%rd2];
	ld.shared.u32 	%r39, [%rd2+4];
	add.s32 	%r40, %r38, %r39;
	st.shared.u32 	[%rd2], %r40;
	ld.shared.u32 	%r41, [mergeHistogram256_$_l_Data];
	mov.u32 	%r42, %ctaid.x;
	mov.b32 	%r43, %envreg0;
	add.s32 	%r44, %r43, %r42;
	mul.wide.s32 	%rd11, %r44, 4;
	add.s64 	%rd12, %rd3, %rd11;
	st.global.u32 	[%rd12], %r41;

$L__BB1_19:
	ret;

}
.metadata_section {

.metadata 0 {
	"cl_kernel_attributes",
	"histogram256",
	"reqd_work_group_size(192,1,1)"
}

.metadata 1 {
	"cl_kernel_attributes",
	"mergeHistogram256",
	"reqd_work_group_size(256,1,1)"
}

} // end of .metadata_section

  